function all_data = generateNestedSyntheticData()
    % Define the treatment group, recording, and units
    treatment = 'Control';
    recording = 'pvalb_notreat_0005_rec1';
    unit_ids = {'cid28', 'cid116', 'cid237', 'cid44'};  % Add more units as needed

    % Initialize the struct for each unit
    for i = 1:length(unit_ids)
        unit_id = unit_ids{i};
        
        % Generate synthetic data for each unit
        all_data.(treatment).(recording).(unit_id) = struct( ...
            'Amplitude', 1e3 + randn * 5e3, ...  % Adjusted amplitude range
            'Cell_Type', 'RS', ...
            'DeflectionResponseRatios', [], ...
            'Depth', -randi([100, 500]), ...
            'FR_time_cutoff_after_stim_ms', 500, ...
            'FRs_baseline', [], ...
            'FRs_baseline_vec', rand(1, randi([50, 16349])), ...
            'FRs_stim', [], ...
            'FanoFactor_baseline', rand, ...
            'FanoFactor_stim', rand, ...
            'FirstSpikeLatency', rand, ...
            'FirstSpikeLatency_Reliability', rand, ...
            'FirstSpikeLatency_pdf_x', linspace(0, 50, 100), ...
            'FirstSpikeLatency_pdf_y', normalize(rand(1, 100), 'norm', 1), ...
            'FirstSpikeLatency_perTrial', rand(1, randi([30, 50])), ...
            'Header', [], ...
            'ISI_baseline_CV', rand * 10, ...
            'ISI_baseline_vec', randi([10, 1000], randi([300, 16349]), 1), ...
            'ISI_pdf_peak_xy', [rand * 50, rand], ...
            'ISI_pdf_x', linspace(0.5, 150, 100), ...
            'ISI_pdf_y', normalize(rand(1, 100), 'norm', 1), ...
            'ISI_violations_percent', rand * 10, ...
            'IsSingleUnit', randi([0, 1]), ...
            'MeanFR_baseline', [], ...
            'MeanFR_inst_baseline', [], ...
            'MeanFR_inst_stim', [], ...
            'MeanFR_stim', [], ...
            'MeanFR_total', [], ...
            'Mean_Waveform', randn(32, 121), ...
            'ModulationIndex', rand, ...
            'Normalized_Template_Waveform', rand(121, 1), ...
            'PSTHs_conv', [], ...
            'PSTHs_raw', [], ...
            'Peak1ToTrough_ratio', rand, ...
            'Peak2ToTrough_ratio', rand, ...
            'PeakEvokedFR', [], ...
            'PeakEvokedFR_Latency', [], ...
            'PeakToPeak_ratio', rand * 2, ...
            'Recording_Duration', randi([10000, 30000]), ...
            'Sampling_Frequency', 30000, ...
            'SpikeHalfWidth', rand, ...
            'SpikeTimes_all', generateSpikeTimes(30, 3600, 30000), ...
            'SpikeTimes_baseline', generateSpikeTimes(5, 1800, 30000), ...
            'SpikeTimes_stim', generateSpikeTimes(15, 1800, 30000), ...
            'SpikeTimes_trials', [], ...
            'SpikeTrains_baseline', [], ...
            'SpikeTrains_baseline_ms', [], ...
            'SpikeTrains_for_PSTHs', [], ...
            'SpikeTrains_stim', [], ...
            'SpikeTrains_stim_ms', [], ...
            'SpikeTrains_trials', [], ...
            'SpikeTrains_trials_ms', [], ...
            'StimProb', rand, ...
            'StimResponsivity', rand, ...
            'Stim_Intensity', randi([1, 100]), ...
            'Stim_Offsets_samples', randi([1, 30000 * 3600], 1, 10), ...
            'Stim_Onsets_samples', randi([1, 30000 * 3600], 1, 10), ...
            'Template_Channel', randi([1, 32]), ...
            'Template_Channel_Position', [-21.65, -randi([100, 500])], ...
            'TroughToPeak_duration', rand, ...
            'UnNormalized_Template_Waveform', randn(121, 1), ...
            'peak1_normalized_amplitude', rand ...
        );
    end
end

%% Helper Function to Generate Random Spike Times
function spikeTimes = generateSpikeTimes(firingRate, durationSec, samplingFrequency)
    % Calculate the expected number of spikes
    expectedSpikes = round(firingRate * durationSec);

    % Generate random spike times (in samples)
    spikeTimes = sort(randi([1, durationSec * samplingFrequency], expectedSpikes, 1));
end
